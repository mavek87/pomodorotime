import java.nio.charset.StandardCharsets

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.6.2'
    }
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'seconds'
        }
    }
}

plugins {
    id "application"
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.jreleaser.jdks' version '0.8.0'
}
apply plugin: 'io.github.fvarrui.javapackager.plugin'

application {
    run {
        args = ["--Djdk.gtk.verbose=true"]
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

ext {
    appName = 'pomodorotime'
    prettyAppName = 'PomodoroTime'
    mainName = 'App'
    author = 'Matteo Veroni'
    UTF_8 = StandardCharsets.UTF_8.name()
    logbackVersion = '1.2.11'
    jupiterVersion = '5.8.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = UTF_8
compileTestJava.options.encoding = UTF_8
javadoc.options.encoding = UTF_8

group 'com.matteoveroni'
version '1.0'

wrapper {
    gradleVersion = '7.4.2'
}

application {
    setApplicationName("$appName");
    mainClass.set("${project.group}.${appName}.${mainName}")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')

    // Logging - Sl4j, logback
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    // TrayBar
    implementation 'com.dorkbox:SystemTray:4.1'
    implementation 'com.dorkbox:Utilities:1.9'

    // Formsfx
    implementation 'com.dlsc.formsfx:formsfx-core:8.4.0'

    // Test
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
}

jar {
    manifest.attributes(
            'Built-By': "${author}",
            'Created-By': System.properties['java.version']
                    + " (" + System.properties['java.vendor']
                    + " " + System.properties['java.vm.version'] + ")",
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Main-Class': "${project.group}.${appName}.${mainName}"
    )
}

shadowJar {
    archiveClassifier.set('')
}

test {
    useJUnitPlatform()
}

javapackager {
    // mandatory
    mainClass = application.getMainClassName()
    // optional
    name = application.getApplicationName()
    displayName = prettyAppName
    organizationName = author
    generateInstaller = true
    administratorRequired = false
    bundleJre = true
    assetsDir = file("${projectDir}/assets")
    runnableJar = shadowJar.getArchiveFile().get().asFile
}